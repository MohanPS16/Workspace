<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-OV4RUVE6" ignored="0" name="Default test" tests="10" failures="0" timestamp="31 Jan 2023 12:11:32 GMT" time="3.36" errors="0">
  <testcase name="@BeforeMethod setUp" time="0.425" classname="testCases.CheckoutPageValidator">
    <failure type="java.io.IOException" message="The filename, directory name, or volume label syntax is incorrect">
      <![CDATA[java.io.IOException: The filename, directory name, or volume label syntax is incorrectat java.io.WinNTFileSystem.canonicalize0(Native Method)at java.io.WinNTFileSystem.canonicalize(Unknown Source)at java.io.File.getCanonicalPath(Unknown Source)at org.apache.commons.io.FileUtils.requireCanonicalPathsNotEquals(FileUtils.java:2601)at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:683)at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:630)at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:531)at org.apache.commons.io.FileUtils.copyDirectory(FileUtils.java:502)at com.vcentry.lab.util.ReportOptimiser.optimizeReport(ReportOptimiser.java:22)at com.vcentry.lab.initializer.Initializer.initialize(Initializer.java:59)at testCases.CheckoutPageValidator.setUp(CheckoutPageValidator.java:33)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:451)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)at org.testng.internal.Invoker.invokeMethod(Invoker.java:516)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod teardown" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterMethod teardown -->
  <testcase name="@AfterClass browserQuit" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- @AfterClass browserQuit -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
  <testcase name="validateCheckoutPage" time="0.0" classname="testCases.CheckoutPageValidator">
    <skipped/>
  </testcase> <!-- validateCheckoutPage -->
</testsuite> <!-- Default test -->
